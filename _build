#!/usr/bin/env ruby
# encoding: utf-8

# A script for programmatically generating PSR and translation pages for php-fig.org

PSR_DIR  = File.join(File.dirname(__FILE__), '_includes', 'fig-standards', 'accepted')
EXTRAS   = ['meta', 'examples']
LANG_MAP = {
  :es => 'Spanish',
  :fr => 'French',
  :it => 'Italian',
  :ru => 'Russian',
  :sl => 'Slovenian',
  :'pt-BR' => 'Brazilian Portuguese',
}
PSR_MAP = {
  :PSR0 => 'PSR-0',
  :PSR1 => 'PSR-1-basic-coding-standard',
  :PSR2 => 'PSR-2-coding-style-guide',
  :PSR3 => 'PSR-3-logger-interface',
  :PSR4 => 'PSR-4-autoloader',
}

raise 'Run "git submodule init"' unless File.directory?(PSR_DIR)

Dir["#{PSR_DIR}/*.md"].sort.each do |original|
  # Skip the meta and example files
  next if File.basename(original) =~ Regexp.new("-(#{EXTRAS.join('|')})\\.md$")

  # Skip non-PSR files?
  next unless File.basename(original) =~ /^PSR-(\d+)\b/

  num   = $1
  title = File.read(original).split(/[\n\r]/).first.sub(/^#\s*/, '')

  pages = [
    {
      :lang  => 'en',
      :filename  => 'index',
      :name  => 'English (official)',
      :path  => "/psr/psr-#{num}",
      :title => "PSR-#{num} — #{title}",
      :disc  => false,
      :inc   => original.sub(%r{.*/fig-standards/}, 'fig-standards/'),
    }
  ]

  Dir["#{PSR_DIR}/*/PSR-#{num}*.md"].sort{|a, b| a.length.to_i <=> b.length.to_i }.each do |tr|
    lang  = File.basename(File.dirname(tr))
    title = File.read(tr).split(/[\n\r]/).first
    filename = File.basename(tr).match(/#{PSR_MAP[:"PSR#{num}"]}\-(.*)\.md$/)
    index = 'index'

    if filename
      index = filename[1]
    elsif PSR_MAP[:"PSR#{num}"] + '.md' != File.basename(tr)
      PSR_MAP[:"PSR#{num}"] = File.basename(tr).match(/(.*)\.md$/)[1]
    end

    pages << {
      :lang  => lang,
      :filename  => index,
      :name  => LANG_MAP[lang.to_sym],
      :path  => "/psr/psr-#{num}/#{lang}",
      :title => index == 'index'?"PSR-#{num} — #{title}":title,
      :inc   => tr.sub(%r{.*/fig-standards/}, 'fig-standards/'),
    }
  end

  pages.each do |page|
    links = []
    additional = []
    pages.select{ |a| a[:filename] != page[:filename] and a[:lang] == page[:lang] }.each do |other|
      additional << " - name: #{other[:title]}"
      additional << "   path: #{other[:path]}/#{other[:filename]}.html"
    end
    pages.select{ |a| a[:filename] == page[:filename] }.each do |other|
      links << " - name: #{other[:name]}"
      links << "   path: #{other[:path]}" unless other[:path] == page[:path]
    end
    File.open(".#{page[:path]}/#{page[:filename]}.md", 'w') do |f|
      f << <<-EOS.gsub(/^ {8}/, '')
        ---
        # This file is automatically generated by `_build`.
        layout:     psr
        title:      #{page[:title]}
        disclaimer: #{page[:lang] == 'en' ? 'false' : 'true'}
        translations:
        #{links.join("\n")}
        additional:
        #{additional.join("\n")}
        ---
        {% include #{page[:inc]} %}
      EOS
    end
  end
end
